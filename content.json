{"meta":{"title":"小白同学的博客","subtitle":"","description":"本站是小白同学技术分享博客","author":"小白同学","url":"https://blog-wangyong.xyz","root":"/"},"pages":[{"title":"categories","date":"2020-12-29T13:42:15.427Z","updated":"2020-12-21T15:55:15.730Z","comments":true,"path":"categories/index.html","permalink":"https://blog-wangyong.xyz/categories/index.html","excerpt":"","text":""},{"title":"about","date":"2020-12-31T04:58:34.212Z","updated":"2020-12-31T04:58:34.212Z","comments":true,"path":"about/index.html","permalink":"https://blog-wangyong.xyz/about/index.html","excerpt":"","text":"与&nbsp; 小白同学&nbsp; （ ） 通话中： 小白同学🐷🐵🐟 GitHub：LWANGYONG QQ：3285884651 微信：QQIDWeChat666"},{"title":"analytics","date":"2020-12-29T13:42:15.426Z","updated":"2020-12-28T15:36:41.812Z","comments":true,"path":"analytics/index.html","permalink":"https://blog-wangyong.xyz/analytics/index.html","excerpt":"","text":""},{"title":"friends","date":"2020-12-29T13:42:15.427Z","updated":"2020-12-21T15:58:44.478Z","comments":true,"path":"friends/index.html","permalink":"https://blog-wangyong.xyz/friends/index.html","excerpt":"","text":""},{"title":"links","date":"2021-01-08T15:04:56.000Z","updated":"2021-01-08T15:04:56.318Z","comments":true,"path":"links/index.html","permalink":"https://blog-wangyong.xyz/links/index.html","excerpt":"","text":""},{"title":"Gallery","date":"2020-12-29T13:42:15.428Z","updated":"2020-12-21T16:02:40.927Z","comments":true,"path":"photos/index.html","permalink":"https://blog-wangyong.xyz/photos/index.html","excerpt":"","text":""},{"title":"歌单","date":"2020-12-23T02:57:17.000Z","updated":"2020-12-29T03:40:07.732Z","comments":true,"path":"music/index.html","permalink":"https://blog-wangyong.xyz/music/index.html","excerpt":"","text":"initRunner('#container'); function cancelSpace(e){ var e = e|| window.event; var elm = e.srcElement || e.target; var key = e.keyCode || e.charCode; if(key == 32){ if(elm.tagName.toLowerCase()==\"input\" && elm.type.toLowerCase()==\"text\" || elm.tagName.toLowerCase() == \"textarea\"){ return; } if(window.event){ e.returnValue = false; } else{ e.preventDefault(); } } } document.onkeypress=cancelSpace; 👉键盘上“空格”或“↑键”开始🎮游戏，手机端点🦖👈，“↑键”或“空格”跳跃，“↓键”趴下，欢迎成绩留言~(●’◡’●)~"},{"title":"tags","date":"2020-12-29T13:42:15.429Z","updated":"2020-12-21T15:57:57.074Z","comments":true,"path":"tags/index.html","permalink":"https://blog-wangyong.xyz/tags/index.html","excerpt":"","text":""},{"title":"shuoshuo","date":"2020-12-29T13:42:15.429Z","updated":"2020-12-28T15:25:56.216Z","comments":true,"path":"shuoshuo/index.html","permalink":"https://blog-wangyong.xyz/shuoshuo/index.html","excerpt":"","text":""}],"posts":[{"title":"把自己的网站作应用安装在浏览器中","slug":"浏览器","date":"2021-01-11T13:53:17.498Z","updated":"2021-01-11T14:20:22.063Z","comments":true,"path":"article/ab1a0d15.html","link":"","permalink":"https://blog-wangyong.xyz/article/ab1a0d15.html","excerpt":"","text":"我们每次写博客后都要打开浏览器看一下，是否有问题，而且每次都要在浏览器中输入域名，我感觉每次都有点麻烦，如果把网站搞成一个软件，放在桌面就不用每次都要打开浏览器了，当然你也可以在桌面放了链接，但是感觉逼格不够，（用代码写的话又多此一举）。今天我告诉你们一个简单的方法。 首先我们打开Microsoft Edge，如下图 安装好之后 我们再打开应用 然后右键固定到桌面","categories":[{"name":"个人","slug":"个人","permalink":"https://blog-wangyong.xyz/categories/%E4%B8%AA%E4%BA%BA/"}],"tags":[]},{"title":"全网备份脚本","slug":"全网备份脚本","date":"2021-01-11T13:05:21.141Z","updated":"2021-01-11T13:37:23.447Z","comments":true,"path":"article/86760658.html","link":"","permalink":"https://blog-wangyong.xyz/article/86760658.html","excerpt":"","text":"1、客户端脚本这里我拿nfs服务器充当客户端 #/bin/bash Backup_dir=&quot;/backup&quot; IP_info=$(hostname -i) #cerate backup dir mkdir -p $Backup_dir/$IP_info #tar backup data cd / tar zchf $Backup_dir/$IP_info/system_backup_$(date +%F_week%w).tar.gz ./var/spool/cron/root ./etc/rc.local ./server/scripts ./etc/sysconfig/iptables #del 7 day ago data find $Backup_dir/ -type f -mtime +7|xargs rm 2&gt;/dev/null #create finger file find $Backup_dir/ -type f -mtime -1 ! -name &quot;finger*&quot;|xargs md5sum &gt;$Backup_dir/$Ip_info/finger.txt #backup push data info rsync -az $Backup_dir/ rsync_backup@172.16.1.41::backup --password-file=/etc/rsync.password 2、web服务器脚本#/bin/bash Backup_dir=&quot;/backup&quot; IP_info=$(hostname -i) #cerate backup dir mkdir -p $Backup_dir/$IP_info #tar backup data cd / tar zchf $Backup_dir/$IP_info/system_backup_$(date +%F_week%w).tar.gz ./var/spool/cron/root ./etc/rc.local ./server/scripts ./etc/sysconfig/iptables #tar zchf $Backup_dir/$IP_info/www_backup_$(data +%F_week%w).tar.gz ./var/html/www #tar zchf $Backup_dir/$IP_info/www_log_backup_$(data +%F_week%w).tar.gz ./app/logs tar zchf $Backup_dir/$IP_info/www_backup_$(date +%F_week%w).tar.gz ./var/html/www tar zchf $Backup_dir/$IP_info/www_log_backup_$(date +%F_week%w).tar.gz ./app/logs #del 7 day ago data find $Backup_dir/ -type f -mtime +7|xargs rm 2&gt;/dev/null #create finger file find $Backup_dir/ -type f -mtime -1 ! -name &quot;finger*&quot;|xargs md5sum &gt;$Backup_dir/$Ip_info/finger.txt #backup push data info #rsync -az $Backup_dir/ rsync_backup@172.16.1.41::backup --password-file=/etc/rsync.password rsync -az $Backup_dir/ rsync_backup@172.16.1.41::backup --password-file=/etc/rsync.password 3、备份服务器脚本#del 180 day ago data find /backup/ -type f -mtime +180 ! -name &quot;week1.tar.gz&quot;|xargs rm 2 &gt;/dev/null #check backup data find /backup/ -type f -name &quot;fingex.txt&quot;|xargs md5sum -c &gt;/tmp/check.txt #sed check mail mail -s &quot;check info $(date +%F)&quot; 3285884651@qq.com &lt;/tmp/check.txt 4、实现自动完成全网数据备份（定时任务）客户端定时任务: crontab -e # backup data 0 0 * * * /bin/sh /server/scripts/backup.sh &amp;&gt;/dev/null 服务端定时任务 # check backup data 0 5 * * * /bin/sh /server/scripts/backup_server.sh &amp;&gt;/dev/null 当然这些还是有完善的地方","categories":[],"tags":[{"name":"知识点","slug":"知识点","permalink":"https://blog-wangyong.xyz/tags/%E7%9F%A5%E8%AF%86%E7%82%B9/"}]},{"title":"LINUX运维学习之综合架构篇——备份服务器搭建","slug":"备份服务器搭建","date":"2021-01-08T15:07:31.000Z","updated":"2021-01-09T14:59:39.050Z","comments":true,"path":"article/22885f4a.html","link":"","permalink":"https://blog-wangyong.xyz/article/22885f4a.html","excerpt":"","text":"1、上期我们讲了环境搭建，这次我们搭建备份服务器首先我们先克隆主机，这个我就不演示在VMware中克隆选择链接克隆（学习环境）,克隆好之后进行主机配置 a、修改主机名hostnamectl set-hostname backup b、修改IP地址grep 200 /etc/sysconfig/network-scripts/ifcfg-eth[01] #先找出要修改的IP地址 sed -i &#39;s#200#41#g&#39; /etc/sysconfig/network-scripts/ifcfg-eth[01] #然后修改两张网卡 sed -i &#39;/UUID/d&#39; /etc/sysconfig/network-scripts/ifcfg-eth[01] #然后在删除UUID的信息 PS: 服务器要一台一台的开启，进行修改，不要同时启动 备份服务器的作用 01、备份数据 02、进行日志统一保存 2、如何部署搭建备份服务器：rsync服务01、什么是rsync服务：rsync是一款开源的、快速的、多功能的可实现的全量及增量的本地或者远程数据同步备份的优秀工具。 a、本地备份的命令 cp /etc/hosts /etc/hosts.bak rsync /etc/hosts /tmp/hosts_rsync b、 远程备份 scp 远程备份的数据首先要有个备份目录 在备份服务器创建一个backup的目录 mkdir /backup scp -rp /etc/hosts root@172.16.1.41:/backup -r 递归复制传输数据 -p 保持文件属性 02、rsync方式备份数据先安装软件 yum install -y rsync 这里我把存储服务器先当作客户端，服务器名字为nfs01,其他修改和备份服务器一样,之前我在里面搞了一下东西，现在这个目录里是没有hosts_rsync文件的 我们先查看一下备份服务器backup目录 rsync -rp /etc/hosts 172.16.1.41:/backup/hosts_rsync 此时备份服务器就已经有了 总结：用rsync备份目录时： 备份目录后面有 / 只讲目录下面的内容备份 备份目录时后面没有 / 只备份目录 2、守护进程方式备份数据01、可以进行一些备注管理 02、可以进行安全策略管理 03、可以实现自动传输备份数据 1、rsync 守护进程部署方式；（服务端）（1）下载软件 yum install -y rsync （2）配置文件 vim /etc/rsyncd.conf 把下面添加进去 ##created by HQ at 2017 ###rsyncd.conf start## uid = rsync --- 指定管理备份目录的用户 gid = rsync --- 指定管理备份目录的用户组 port = 873 --- 定义rsync备份服务的网络端口号 fake super = yes --- 将rsync虚拟用户伪装成为一个超级管理员用户 use chroot = no --- 和安全相关的配置 max connections = 200 --- 最大连接数 同时只能有200个客户端连接到备份服务器 timeout = 300 --- 超时时间(单位秒) pid file = /var/run/rsyncd.pid --- 记录进程号码信息 1.让程序快速停止进程 2. 判断一个服务是否正在运行 lock file = /var/run/rsync.lock --- 锁文件 log file = /var/log/rsyncd.log --- rsync服务的日志文件 用于排错分析问题 ignore errors --- 忽略传输中的简单错误 read only = false --- 指定备份目录是可读可写 list = false --- 使客户端可以查看服务端的模块信息 hosts allow = 172.16.1.0/24 --- 允许传输备份数据的主机(白名单) hosts deny = 0.0.0.0/32 --- 禁止传输备份数据的主机(黑名单) auth users = rsync_backup --- 指定认证用户 secrets file = /etc/rsync.password --- 指定认证用户密码文件 用户名称:密码信息 [backup] --- 模块信息 comment = &quot;backup dir by oldboy&quot; path = /backup --- 模块中配置参数 指定备份目录 （3）创建虚拟用户（rsync） useradd rsync -M -s /sbin/nologin （4）创建备份服务器认证密码文件 echo &quot;rsync_backup:123456&quot; &gt;/etc/rsync.password cat /etc/rsync.password #查看一下 chmod 600 /etc/rsync.passwod #设置权限 （5）创建备份目录 mkdir /backup chown rsync.rsync /backup #修改用户主和用户组 （6）启动备份服务器 systemctl start rsyncd #启动rsync服务 systemctl enable rsyncd #设置开机自启 systemctl status rsyncd #查看状态 2、rsync守护进程客户端部署（1）创建一个密码信息 echo &quot;123456&quot; &gt;/etc/rsync.password #添加密码信息 chmod 600 /etc/rsync.password #修改权限 （2）进行免交互式传输数据测试 rsync -avz /etc/hosts rsync_backup@172.16.1.41::backup --password-file=/etc/rsync.password （3）恢复数据 rsync -avz root@172.16.1.41:/backup/hosts ./--password-file=/etc/rsync.password rsync命令参数说明 -v 显示详细的传输信息 -a 命令的归档参数 -r 递归参数 -t 保持文件属性，修改时间信息不变 -o 保持文件属主不变 -g 保持文件的属组不变 PS：如何让-o和-g参数生效，需要将配置文件rsyncd.conf中的uid和gid改为root，把fake super参数进行注释 -p 保持文件权限信息不变 -D 保持设备文件信息不变 -l 保持链接文件属性信息不变 -L 保持链接文件数据信息不变 -P 显示数据传输的进度信息 --exclude=PATTERN 排除指定数据不被传输 --exclude-from=file 排除指定数据不被传输（批量排除） --bwlimit=RATE 显示传输速率 --delete 无差异同步参数","categories":[],"tags":[{"name":"综合架构","slug":"综合架构","permalink":"https://blog-wangyong.xyz/tags/%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"}]},{"title":"守护进程服务在企业应用","slug":"守护进程服务在企业应用","date":"2021-01-08T15:07:31.000Z","updated":"2021-01-09T15:01:31.248Z","comments":true,"path":"article/22885f4a.html","link":"","permalink":"https://blog-wangyong.xyz/article/22885f4a.html","excerpt":"","text":"1、守护进程多模块功能配置sa sa_data.txt dev dev_data.txt dba dba_data.txt vim /etc/rsync.conf #添加以下信息 [backup] comment = &quot;backup dir by oldboy&quot; path = /backup [dba] comment = &quot;backup dir by oldboy&quot; path = /dba [dev] comment = &quot;backup dir by oldboy&quot; path = /devdata 2、守护进程的排除环境[root@nfs01 /]# mkdir -p /oldboy [root@nfs01 /]# mkdir -p /oldboy/&#123;a..c&#125; [root@nfs01 /]# touch /oldboy/&#123;a..c&#125;/&#123;1..3&#125;.txt [root@nfs01 /]# tree /oldboy /oldboy ├── 01.txt ├── 02.txt ├── a │?? ├── 1.txt │?? ├── 2.txt │?? └── 3.txt ├── b │?? ├── 1.txt │?? ├── 2.txt │?? └── 3.txt └── c ├── 1.txt ├── 2.txt └── 3.txt 01、 需求01: 将/oldboy目录下面 a目录数据全部备份 b目录不要备份1.txt文件 c整个目录不要做备份--exclude=PATTERN 绝对路径方式: [root@nfs01 /]# rsync -avz /oldboy --exclude=/oldboy/b/1.txt --exclude=/oldboy/c/rsync_backup@172.16.1.41::backup --password-file=/etc/rsync.password sending incremental file list oldboy/ oldboy/01.txt oldboy/02.txt oldboy/a/ oldboy/a/1.txt oldboy/a/2.txt oldboy/a/3.txt oldboy/b/ oldboy/b/2.txt oldboy/b/3.txt 相对路径方式: [root@nfs01 /]# rsync -avz /oldboy --exclude=b/1.txt --exclude=c/ rsync_backup@172.16.1.41::backup --password-file=/etc/rsync.password sending incremental file list oldboy/ oldboy/01.txt oldboy/02.txt oldboy/a/ oldboy/a/1.txt oldboy/a/2.txt oldboy/a/3.txt oldboy/b/ oldboy/b/2.txt oldboy/b/3.txt ​ sent 502 bytes received 177 bytes 1,358.00 bytes/sec total size is 0 speedup is 0.00 02、将/oldboy目录下面 a目录数据全部备份 b目录不要备份1.txt文件 c整个目录1.txt 3.txt文件不要备份--exclude-from=file --- 批量排除 第一个历程: 编辑好一个排除文件 [root@nfs01 /]# cat /oldboy/exclude.txt b/1.txt c/1.txt c/3.txt exclude.txt 第二个历程: 实现批量排除功能 [root@nfs01 /]# rsync -avz /oldboy --exclude-from=/oldboy/exclude.txt rsync_backup@172.16.1.41::backup --password-file=/etc/rsync.password sending incremental file list oldboy/ oldboy/01.txt oldboy/02.txt oldboy/a/ oldboy/a/1.txt oldboy/a/2.txt oldboy/a/3.txt oldboy/b/ oldboy/b/2.txt oldboy/b/3.txt oldboy/c/ oldboy/c/2.txt 03、守护进程来创建备份目录[root@nfs01 /]# rsync -avz /etc/hosts rsync_backup@172.16.1.41::backup/10.0.0.31/ --password-file=/etc/rsync.password sending incremental file list created directory 10.0.0.31 hosts sent 226 bytes received 75 bytes 602.00 bytes/sec total size is 371 speedup is 1.23 PS: 客户端无法在服务端创建多级目录 3、 守护进程的访问控制配置守护进程白名单和黑名单功能PS: 建议只使用一种名单 守护进程的列表功能配置 [root@nfs01 /]# rsync rsync_backup@172.16.1.41:: backup &quot;backup dir by oldboy&quot; dba &quot;backup dir by oldboy&quot; dev &quot;backup dir by oldboy&quot;","categories":[],"tags":[{"name":"企业中的应用","slug":"企业中的应用","permalink":"https://blog-wangyong.xyz/tags/%E4%BC%81%E4%B8%9A%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/"}]},{"title":"备份服务器项目需求","slug":"备份服务器项目需求","date":"2021-01-08T15:07:31.000Z","updated":"2021-01-11T13:37:30.219Z","comments":true,"path":"article/87041637.html","link":"","permalink":"https://blog-wangyong.xyz/article/87041637.html","excerpt":"","text":"1、备份项目需求（1）所有的服务器备份目录统一（/backup）mkdir /backup （2）要备份的系统配置文件包括但不限于：​ a、定时任务的配置文件（/var/spool/cron/root）（适用于web和nfs服务器） ​ b、开机自启动的配置文件（/etc/rc.local）（适用于web和nfs服务器） ​ c、日常脚本目录（/server/scripts） ​ d、防火墙iptables的配置文件（/etc/sysconfig/iptables） ​ e、等等 tar zcvhf /backup/system_back.tar.gz /var/spool/cron/root /etc/rc.local /server/scripts /etc/sysconfig/iptables -h 将链接文件指向的源文件备份 PS：最好用相对路径进行备份 cd / tar zcvhf /backup/system_back.tar.gz ./var/spool/cron/root ./etc/rc.local ./server/scripts ./etc/sysconfig/iptables （3）web服务器站点目录假定为（/var/html/www）tar zcvhf /backup/www_back.tar.gz ./var/html/www （4）web服务器A访问日志路径假定为（/app/logs）tar zcvhf /backup/www_log_back.tar.gz ./app/logs （5）web服务器保留打包后七天的备份数据即可（本地留存7天即可，太多硬盘会满）tar zchf /backup/system_backup_$(date +%F).tar.gz ./var/spool/cron/root ./etc/rc.local ./server/scripts ./etc/sysconfig/iptables find /backup -type f -mtime +7|xargs rm （6）备份服务器上，保留每一周的所有数据副本，其他要保留6个月的数据副本tar zchf /backup/www_backup_$(date +%F_week%w).tar.gz ./var/html/www tar zchf /backup/www_log_backup_$(date +%F_week%w).tar.gz ./app/logs find /backup -type f -mtime +180!-name &quot;*week1.tar.gz&quot;|xargs rm 2、如何验证数据完整性​ 利用md5算法进行验证数据完整性​ md5sum -c 指纹文件命令执行原理​ 第一个历程: 打开一个指纹文件,将信息记录到缓存中​ 第二个历程: 根据指纹文件的路径信息,生成md5数值信息​ 第三个历程: 将新生成md5数值和原有指纹文件中的数值进行比较​ 第四个历程: 如果相同显示结果为ok,如果不同显示failed find /backup/ -type f -mtime -1 ! -name &quot;finger*&quot; |xargs md5sum &gt;/backup/10.0.0.31/finger.txt rsync -avz /backup/rsync_backup@172.16.1.41::backup --password-file=/etc/rsync.password md5sum -c /backup/10.0.0.31/finger.txt #检查 3、如何实现发送邮件a、配置163企业邮箱注册后邮箱打开设置 以下配置 b、编写linux服务邮件相关配置文件vim /etc/mail.rc set from=xxxx@163.com smtp=smtp.163.com set smtp-auth-user=xxxx@163.com smtp-auth-password=授权密码 smtp-auth=login systemctl restart postfix.service c、 发送邮件测试echo &quot;邮件发送测试&quot;|mail -s &quot;邮件测试&quot; xxxx@qq.com mail -s &quot;邮件测试&quot; xxxxx@qq.com &lt;/etc/hosts 配置完成","categories":[],"tags":[{"name":"企业中的应用","slug":"企业中的应用","permalink":"https://blog-wangyong.xyz/tags/%E4%BC%81%E4%B8%9A%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/"}]},{"title":"LINUX运维学习之综合架构篇——架构搭建准备","slug":"综合架构","date":"2020-12-28T12:08:59.000Z","updated":"2021-01-12T13:39:41.969Z","comments":true,"path":"article/f439b05e.html","link":"","permalink":"https://blog-wangyong.xyz/article/f439b05e.html","excerpt":"","text":"1、综合架构组成说明用户访问网站是使用HTTP协议80端口，查看80端口是否开启 netstat -lntup|grep 80 web服务器：让用户访问需要公网IP地址，域名解析，当访问网站的用户较多，同时写入增多消耗IO，服务器磁盘压力，为了缓解压力，用户在网站的注册等某些字符串信息，那就存储到数据库服务器，图片视频附件等存储在存储服务器，不够用是也可以配置多台服务器 随着用户使用的增多，数据库，存储服务器可能损坏，就要有一个备份服务器，将数据库及存储服务器中的数据定时备份到备份服务器中，为了防止备份服务器损坏，要考虑多台备份服务器，尽量不要把备份服务器服务器放在同一个地方，用户不断增加，一个web服务器明显不够，就要增加多台web服务器，减缓第一台web服务器的压力。 为了防止黑客非法入侵，配置防火墙服务 所以这个小型架构用户访问时先访问到防火墙，再到负载均衡设备，再到相应web服务器，根据存储的内容，在分配到数据库或者存储服务器，为了防止负载均衡设备出问题也可以配置多台，叫高可用架构。用户先访问一台，一台出问题了再访问第二台，首先访问的叫主服务器，第二台叫备服务器 用户访问网站一般浏览网站比写入数据到网站的行为更多，为了让用户读的更快，加速读取数据，配置缓存服务器，将磁盘重点，热点数据存储到缓存服务器，再存储到内存中，用户就可以从缓存服务器读取数据，写入也可以，如果读取的数据没有，再根据访问的内容访问数据库服务器或者存储服务器，缓存也可以多台。 数据分析服务器可以把存储的数据调取过来分析，也可以分析日志，也是分为个小型架构，叫消息队列结构，前端收集数据，后端进行数据分析，将结果以图形的方式展示出来，用awk或者ELK进行数据分析 已经部署了很多设备，为了实现对架构更好的管理，可以配置监控服务器，如果有其他多个机房也可以配置多个监控服务器，叫代理监控服务器，一个主的监控服务器，master表示，这样可以对所有企业里的服务器做监控管理。 结构的服务器设备太多，需要管理这一堆架构，实现部署配置需要，在配置一个批量管理服务器，跟每台服务器建立联系。 对于用户的访问渠道有了，对于运维人员，走另一条路，为了保证安全性，配置VPN服务器，让只有内部的人可以连接进入，类似于一个特殊通道，需要用户名密码验证，通过后就可以连接访问管理任意一台服务器。 为了防止内部人员做出破坏性行为，为内部人员访问做出监管，配置跳板机服务器，VPN，跳板机，批量管理，监控等服务器叫做网站运维人员管理网站的架构，通过这个架构，可以更好地方便对网站庞大的服务器监控管理，以及出现问题了可以记录用户的操作行为。以上就完成了一个中小规模的完整企业架构。 2、综合架构规划 主机名称 IP地址规划 需要的软件 防火墙服务器（firewalld) 10.0.0.81（外网） 172.16.1.81(内网) 负载均衡服务器（lb01） 10.0.0.5 (外网) 172.16.1.5（内网） nginx keepalived 负载均衡服务器（lb02） 10.0.0.6 (外网) 172.16.1.6（内网） nginx keepalived web服务器（web01) 10.0.0.7 (外网) 172.16.1.7 (内网) nginx web服务器（web02) 10.0.0.8 (外网) 172.16.1.8 (内网) nginx web服务器（web03) 10.0.0.9 (外网) 172.16.1.9 (内网) nginx 数据库（db01) 10.0.0.51(外网) 172.16.1.51（内网） MySQL 存储服务器（nfs01） 10.0.0.31(外网) 172.16.1.31（内网） nfs 备份服务器（backup） 10.0.0.41（外网） 172.16.1.41（内网） rsync 批量管理服务器（m01） 10.0.0.61(外网) 172.16.1.61（内网） ansible 跳板机服务器（jumpserver） 10.0.0.71(外网) 172.16.1.71（内网） jumpserver 监控服务器（zabbix） 10.0.0.72(外网) 172.16.1.72（内网） zabbix 由于资源有限，只能用虚拟机进行模拟测试 1、优化配置模板主机进行网卡配置 之前模板主机第一张网卡IP地址为10.0.0.200 所以在添加一张网卡，IP地址为171.16.1.200 a、添加网卡 b、配置网卡 vim /etc/sysconfig/network-scripts/ifcfg-eth1 或者输入 nmtui 图形化界面配置网卡 2、系统优化过程1）模板机优化配置——hosts 文件配置先备份一下hosts文件 \\cp /etc/hosts&#123;.bak&#125; cat &gt;/etc/hosts&lt;&lt;EOF 127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4 ::1 localhost localhost.localdomain localhost6 localhost6.localdomain6172.16.1.5 lb01 172.16.1.6 lb02 172.16.1.7 web01 172.16.1.8 web02 172.16.1.9 web03 172.16.1.51 db01 db01.etiantian.org 172.16.1.31 nfs01 172.16.1.41 backup 172.16.1.61 m01 172.16.1.71 jumpserver 172.16.1.72 zabbixEOF 2）模板机优化配置——跟新yum源更改yum源 mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup &amp;&amp;\\ curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo yum install -y wget wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo 3）模板机优化配置——关闭selinuxsed -i.bak &#39;s/SELINUX=enforcing/SELINUX=disabled/&#39; /etc/selinux/config grep SELINUX=disabled /etc/selinux/config 4) 模板机优化配置——关闭iptablessystemctl stop firewalld systemctl disable firewalld systemctl ststus firewalld 5) 模板机优化配置——普通用户oldboy可以使用sudouseradd oldboy echo 123456|passwd --stain oldboy echo &quot;oldboy ALL=(ALL) NOPASSWD: ALL &quot;&gt;&gt;/etc/sudoers tail -1 /etc/sudoers visudo -c 6) 模板机优化配置——英文字符集先查看一下 echo $LANG 修改 localectl set-locale LANG=&quot;en_US.UTF-8&quot; 重启 reboot echo $LANG 7) 模板机优化配置——时间同步下载软件 yum install -y ntpdate echo &#39;#time sync by lidao at 2020-12-03&#39; &gt;&gt;/var/spool/cron/root 添加注释 echo &#39;*/5 * * * * /usr/sbin/ntpdate ntp1.aliyun.com &gt;/dev/null 2&gt;&amp;1&#39; &gt;&gt;/var/spool/cron/root 每隔五分钟同步一次 crontab -l 查看 8) 模板机优化配置——加大文件描述yum install -y lsoflsof -i:22 echo &#39;* - nofile 1024&#39; &gt;&gt;/etc/security/limits.conf source /etc/security/limits.conf 说明：一个服务进程运行起来，会打开相应的文件 9) 模板机优化配置——安装其他小软件yum install lrzsz nmap tree dos2unix nc telnet bash-completion bash-completion-extras -y 当然以上命令，也可以写成一个脚本，方法有很多，这里就不介绍了，可自行百度。","categories":[],"tags":[{"name":"综合架构","slug":"综合架构","permalink":"https://blog-wangyong.xyz/tags/%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"}]},{"title":"ansible","slug":"ansible","date":"2020-12-28T12:05:59.000Z","updated":"2020-12-28T13:14:58.633Z","comments":true,"path":"article/c5cc7aa1.html","link":"","permalink":"https://blog-wangyong.xyz/article/c5cc7aa1.html","excerpt":"","text":"","categories":[],"tags":[]},{"title":"TCP协议的三次握手和四次挥手","slug":"TCP协议的三次握手和四次挥手","date":"2020-12-27T14:42:06.160Z","updated":"2021-01-12T14:06:45.166Z","comments":true,"path":"article/109c512.html","link":"","permalink":"https://blog-wangyong.xyz/article/109c512.html","excerpt":"","text":"1、TCP协议是什么？ 传输控制协议（Transmission Control Protocol，TCP）是一种面向连接的、可靠的、基于字节流的传输层通信协议。在 TCP 协议中，通过三次握手建立连接。通信结束后，还需要断开连接。如果在发送数据包时，没有正确被发送到目的地时，将会重新发送数据包。 2、TCP的工作模式？ TCP 协议的数据包进行传输采用的是服务器端和客户端模式。发送 TCP 数据请求方为客户端，另一方则为服务器端。客户端要与服务器端进行通信，服务器端必须开启监听的端口，客户端才能通过端口连接到服务器，然后进行通信。 3、TCP的三次握手 第一次握手： 发送syn请求建立连接字段，发送seq序列号信息，第一个数据包的序列号默认为（X） 第二次握手： 发送syn请求建立连接字段，同时发送ack确认控制字段，发送seq序列号信息为（Y），还会发送ack确认号（X+1）信息（对上一个数据列号信息进行确认） 第三次握手： 发送ack确认控制字段，发送seq序列号信息（X+1），发送ack确认号（X+1） 4、TCP的四次挥手过程 第一次挥手： 发送fin请求断开连接控制字段 第二次挥手： 发送ack确认控制字段 第三次挥手： 发送fin请求断开连接字段，发送ack确认字段 第四次挥手： 发送ack控制字段，断开连接","categories":[],"tags":[{"name":"网络","slug":"网络","permalink":"https://blog-wangyong.xyz/tags/%E7%BD%91%E7%BB%9C/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-12-20T13:53:21.248Z","updated":"2020-12-29T04:33:24.214Z","comments":true,"path":"article/16107.html","link":"","permalink":"https://blog-wangyong.xyz/article/16107.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[],"tags":[{"name":"Hello World","slug":"Hello-World","permalink":"https://blog-wangyong.xyz/tags/Hello-World/"}]}],"categories":[{"name":"个人","slug":"个人","permalink":"https://blog-wangyong.xyz/categories/%E4%B8%AA%E4%BA%BA/"}],"tags":[{"name":"知识点","slug":"知识点","permalink":"https://blog-wangyong.xyz/tags/%E7%9F%A5%E8%AF%86%E7%82%B9/"},{"name":"综合架构","slug":"综合架构","permalink":"https://blog-wangyong.xyz/tags/%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"},{"name":"企业中的应用","slug":"企业中的应用","permalink":"https://blog-wangyong.xyz/tags/%E4%BC%81%E4%B8%9A%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/"},{"name":"网络","slug":"网络","permalink":"https://blog-wangyong.xyz/tags/%E7%BD%91%E7%BB%9C/"},{"name":"Hello World","slug":"Hello-World","permalink":"https://blog-wangyong.xyz/tags/Hello-World/"}]}